{
  "name": "casper-chai",
  "description": "Extends Chai with assertions for CasperJS testing.",
  "keywords": [
    "casper",
    "chai",
    "casperjs",
    "phantomjs"
  ],
  "version": "0.1.6",
  "author": {
    "name": "Brian M Hunt",
    "email": "brianmhunt@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/brianmhunt/casper-chai.git"
  },
  "bugs": {
    "url": "http://github.com/brianmhunt/casper-chai/issues"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./build/casper-chai.js",
  "scripts": {
    "test": "cake test",
    "lint": "jshint ./lib"
  },
  "dependencies": {
    "lodash": ">= 0.8"
  },
  "devDependencies": {
    "icolor": "*",
    "chai": ">= 1.3.0",
    "glob": "*",
    "semver": "*",
    "coffee-script": ">= 1.3.3",
    "uglify-js2": "*",
    "underscore.string": ">= 2.3"
  },
  "readme": "# Casper.JS Assertions for Chai [![Build Status](https://secure.travis-ci.org/brianmhunt/casper-chai.png?branch=master)](https://travis-ci.org/brianmhunt/casper-chai)\n\n**Casper–Chai** provides a set of custom assertions for use with [CasperJS][].\nYou get all the benefits of [Chai][] to test with CasperJS.\n\nIt is an alternative to Casper's built-in [Tester][].  Instead of using\nCasper's Tester you can use (in this case with [Mocha][] and Chai):\n\n    describe(\"my page\", function () {\n      it(\"can be opened by Casper\", function () {\n        casper.open(\"http://www.google.com\")\n\n        casper.then(function () {\n          expect(casper.currentHTTPStatus).to.equal(200);\n        });\n\n        casper.then(function () {\n          expect(\"Google\").to.matchTitle\n        });\n      });\n    });\n\n### Tests\n\n<table>\n  <thead>\n    <th>Name</th>\n    <th>Description</th>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#attr'>attr(attr_name)</a></td>\n      <td>True when one selector has the given attribute\n      </td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#attrany'>attrAny(attr_name)</a></td>\n      <td>True when any selector has the given attribute\n      </td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#attrall'>attrAll(attr_name)</a></td>\n      <td>True when all elements matching selector have the given attribute\n      </td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#fieldvalue'>fieldValue(value)</a></td>\n      <td>\n        the named input provided has the given value\n      </td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#indom'>inDOM</a></td>\n      <td>when the given selector is in the DOM</td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#loaded'>loaded</a></td>\n      <td>when the given resource exists</td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#matchcurrenturl'>matchCurrentUrl</a></td>\n      <td>the current URL matches</td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#matchonremote'>matchOnRemote</a></td>\n      <td>compare the remote evaluation to the given expression</td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#matchtitle'>matchTitle</a></td>\n      <td>the current Title matches</td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#tagname'>tagName(valid_tags)</a></td>\n      <td>all elements matching the selectors are one of the given tags</td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#textindom'>textInDOM</a></td>\n      <td>the text can be found in the DOM</td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#textmatch'>textMatch(expression)</a></td>\n      <td>\n        the text of the given selector matches the expression (a string\n        or regular expression).\n      </td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#trueonremote'>trueOnRemote</a></td>\n      <td>the remote expression evaluates to something truthy</td>\n    </tr>\n    <tr>\n      <td><a href='casper-chai/blob/master/build/casper-chai.md#visible'>visible</a></td>\n      <td>the selector matches a visible element</td>\n    </tr>\n  </tbody>\n</table>\n\nMore [documentation and examples](casper-chai/blob/master/build/casper-chai.md).\n\nFor even more examples, if you are cool with\n[CoffeeScript](http://coffeescript.org/), check out the [unit\ntests](https://github.com/brianmhunt/casper-chai/blob/master/test/common.coffee).\n\n\n### Installation\n\nCasper-Chai can be installed with [npm][] using `npm install casper-chai`, or\nincluding\n[`build/casper-chai.js`](https://raw.github.com/brianmhunt/casper-chai/master/build/casper-chai.js)\nin a directory `require` will find it.\n\nAdd extensions to Chai with:\n\n    casper_chai = require('casper-chai');\n    chai.use(casper_chai);\n\nTo build locally, clone the project and run `cake toast test` in the\nproject directory. You may have to run `npm install` to get dependencies\n(which, obviously, requires [npm][] to be installed), and make sure `cake` is\navailable - which should be possible by running `npm install -g coffee-script`.\n\n### AMD\n\nCasper–Chai supports being used as an [AMD][] module, registering itself\nanonymously (just like Chai).\n\n[CasperJS]: http://casperjs.org/\n[Chai]: http://chaijs.com/\n[Mocha]: http://visionmedia.github.com/mocha/\n[AMD]: https://github.com/amdjs/amdjs-api/wiki/AMD\n[npm]: https://npmjs.org/\n[Tester]: http://casperjs.org/api.html#tester\n\n",
  "readmeFilename": "README.md",
  "_id": "casper-chai@0.1.6",
  "dist": {
    "shasum": "0b4294a5de9a5d83c48b46aff9a5b37a72a4c487"
  },
  "_from": "casper-chai@x.x.x",
  "_resolved": "https://registry.npmjs.org/casper-chai/-/casper-chai-0.1.6.tgz"
}
